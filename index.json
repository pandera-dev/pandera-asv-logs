{"project": "pandera", "project_url": "https://github.com/pandera-dev/pandera", "show_commit_url": "https://github.com/pandera-dev/pandera/commit/", "hash_length": 8, "revision_to_hash": {"0": "387ccadd7afb2bdc18e2ae89203cac7ddae76c9b", "1": "0695be03068aa9c456d1fd8b5a1fc375a570df15", "2": "1c71129f0ad44f642f545b3f9f05568ce273f869", "3": "bbd9e3cff48807376897624bdbb0886ea1391de7", "4": "975592f03076984c830d45ef14a86e93e667972e", "5": "87601dc3f5d3a7d399e1367d5d59551650e84d6c", "6": "6244b7eaec7fa003d201707973e29da6494a7380", "7": "c83d8cd48637a2cf9621ae579647188f360ca3e8", "8": "e2ae3f1b4f5190fc43162468dcb8daf54bbbc591", "9": "78c62ab8c8470e77c3f013edbcd25578c0a564ac", "10": "cf2f03043280422a0899050398c5cb852f5379a8", "11": "48565426c92b8fa4c05ee485eed59db48f8fc1e9", "12": "894d3f2f6ad74446c47826f311404e16fc4055e1", "13": "b7128e8838ee08a7d4d4f333f68e9ace69c8cad1", "14": "6ba3486a62af8a2319ca339c0800d6fa64d744a2", "15": "c553a5bfc71d0f0feeac6b8bef3e986f02638c24", "16": "d9db47a8f035c0bad519b5617c4b4ee6f2c83a52", "17": "d53427e0ca173536aa30f287a61b686ed0fd1946", "18": "e7c517bcc45f35d8fd44c272cad78f930d4e56bd", "19": "8024fe65f827d5e2e7a2592a85f9864d13a4b0d2", "20": "2deefc079f5a1e2c9d6399609d2a457c9626ce18", "21": "26d5364e51c9fdbd0956a18840bc517069c38783", "22": "6c30b9ff0160c7f262e82608076f1f2f4479c664", "23": "57513443bdb8e17b7b59da4efda2a15f86065214", "24": "663beca7e3c19ee727b5ec9538f4188784cb72fa", "25": "da5e6fe4b27c099cf0b89fbc902c898226bbc2bb", "26": "ab41c2d790905bbc93907a86ae95858f1c00a9c1", "27": "be5f67698273d383d4e04d26d76a5f3c1e1e4745", "28": "0ac4409605185a47c4dc98ec9a7caca31e971259", "29": "1f2884aa1904af374ae34f015cb6e95350d2646e", "30": "a68af4270a0e37a164a1f50cfd580c8aa3aea903", "31": "5662238b8d5a13aacf30f49ca2199d86b5d43fc6", "32": "490b6cb16cbb4e6e468d7127542041d0ae0e76a3", "33": "dcb0c9c80898d8297dd29c875b324769bf7c7eaf", "34": "1bab4ee36b6b9cb3b27e1614d2b9e47800554362", "35": "ba59981ed3acbd3407380162a288f03dc8610b16", "36": "6421d857e781d2a2b01f9888a78783f643434dd0", "37": "8319fbc7384b2d85088451f1285347a303aa4a41", "38": "5fe29eb0df3606d1d087cefb399e8551e1661865", "39": "8583b7d48487cd66fa6e1e177b4ba8e6e3c7f352", "40": "87ac1688db497d80e210cf35efeddacb58ee7b9c", "41": "4a1b6880cb78b6aca2709decb81b79d9390b5440", "42": "d4517a61bf89175444ff59ffd9dc403131429bd2", "43": "2ca02e2289ddccbaf5e8af2756a949e98ece86a1", "44": "76bbe683cd78b4b02a0ddf22e5f7c8f6d74ef67f", "45": "76d58ad5abd5752e4df0c31528e09c8ea46a197d", "46": "5b238441cdf249475c2e6b733b8ca9b0a1a59679", "47": "61981a3ede3dbdb72a0492c4c37ad14482162717", "48": "1d07d590b2ab0d6f114e238a27f6cfb8c53481ec", "49": "902f1990c3f0ebc07074faee3f3c7e123600a872", "50": "5db1ba19ab383d3af4a9b902a6faa036952bfe21", "51": "e6a7f7d37fc822b221b2b572a19bc94b6393c2a1", "52": "dcb9487f0c74d90680d429cd82b19490e34a2a12", "53": "18b3f861c2cd248c6e036fc99780d86f8c82a09d", "54": "3f7d11cde6689a425dbad47bca4543f5e33c21ab", "55": "f03cdb4c120c296f8719166d86bb9a44f220ad8e", "56": "4bf238f388a94eca3b4320fcaf8ea5a72932f2f4", "57": "4a7fad69da30d9eded4318b070d2ab1f3f071db2", "58": "0ed6d7b3898eb82cc9cc01bf3157a8293bf125a3", "59": "43adb48fffc49fa921ff8fd3d78a7ed58a9d5002", "60": "de2b19d5b642b2cc03cd44bff83ebe8f99cca96f", "61": "007fc7a0d4d52cb0077ba321b6dcdad475d8790f", "62": "363ea09fffe291ae28b01855ab6b27ced49a7561", "63": "dca58dd1cfb1862a52764abe7e82fd19a1e4c3d6", "64": "21192d542bd51ccdc33063bd33c8e926c75ac23b", "65": "e1bc5c4202dc84ce3c59cbce8905c39f303b0b73", "66": "e1c8063312b86ad8417cbf12cebe1218ddbf39f5", "67": "3c96cb1ef97dc818ec047f5745a3341d5d70993e", "68": "fed48c8e5b5d1f080ea03abe5f4daf2bae7eea62", "69": "048a5a7b348610e30106516f83e61fcab991f88b", "70": "be330262bb9ff5cfb4499215e1ae70ead1e9ee52", "71": "2c2558b010e04d3b4c352efe5a6745240818d4c4", "72": "6cfa2a7b9f5f4af95631f2590bebba0557b3a877", "73": "cae9dd46e3ddf5168a00763b429cefa6169410e5", "74": "c94e1f324c469adc01317bf4c364be723dd6cdee", "75": "988b14b0746fa8f60d64b2d5a189b63f94db6034", "76": "f831d6f75e42b000d4576dda56e2c8d971bf5700", "77": "4286a5ccef536f8ca459514947871fef9984bb25", "78": "6f920018b0f68f131e2a27de72a48d528b7e5e6e", "79": "3d3ef7cd9b9df5d0b5202ca0e8db49c85f5b7b74", "80": "dd97eb4edd6e61154429bb91219bcfad34a2c24a", "81": "0d886247acf8b44afd5b4e06bb0a4953fa6efcd8", "82": "672d3b3c0bf5b59846d6dddb09a29734f871b22a", "83": "7532b0deecae9295fc9d55ce92f50fe1d013cd17", "84": "7e5b97ea0dd0a5cdb387e7fe31d2fd806e338d22", "85": "e5e349dd1f4fba72b283c2dd0be1b70ba4623e50", "86": "4d38a4db3eefc13a940b6e47f848583df6f1979d", "87": "c1a36161cc4b94d47320a6b940bbfad71b631ba0", "88": "ca5b39d329b3572d2889dd52a41ea97da6ef1534", "89": "6f25eb76943175a39715a17a3b87fff31ba00729", "90": "280d6d895d5654d3a1bc6c9974203d8d4cb1ebab", "91": "f67050dd2a40cc03ba790300062317198fbc240c", "92": "ffd57d85d4983bb085ca0cd0af1fba59970ff6db", "93": "b01eef07015dc76cae4b2a5be060417be3288c11", "94": "60612547ec136bf3b52a6ba89c71970c39f2ea4d", "95": "e6782f1cb213ed3135fb30768c8edf1c6fa8c536", "96": "f7950ad9636a971beffc0054518871aeb937faab", "97": "7310d0debe94e762d36f30d95d016bf1efb8e51c", "98": "fc071d656c40b1063921aecc14997ed2b90b1072", "99": "ed4e8f846d649b6b89dc13d1fc88ba8c3d0bfc2a", "100": "954d8a21497ada4b77d02fd556f8646a0c618a28", "101": "db87b21f3672ae7d2475427454523e68f8793c1a", "102": "4e1f828ab5c9ccfe10b4b0d78006b8937a5c2546", "103": "d8bc9010f91091e2b861cb086819b4196e769c44", "104": "ef1aab6d41efcbc6d42fb9150c1be21c3998d50a", "105": "3ae8aabef745894026d96a207af9fba75a692949", "106": "4eeeb16541e5d9e74748fe9d1307065a8902a6b1", "107": "ae9c735b8aaeb199724765e96f22bf733543e092", "108": "bb5811c23f988abf8a31480349266da8f34178b0", "109": "d219d9a43545637ade10a3d02417328bce260a98", "110": "dc8d845397d2fd45ae5db45c45b2ae4e21e8d81d", "111": "95b6ce581a8376ec0e810af2c10225056ba213ed", "112": "d5816a33b54793d3e191802c3bd9863d1efcd414", "113": "e7d29ec495c34bfd8d3de835a752448fef2338fe", "114": "a691f67f508786d0f298cf6ac63cfc19ddf6dbda", "115": "a81d4b99899ed2eda5a37a1cf9b609cf015122e8", "116": "033b81456d58678a0ed76270e8512ecd95eac8d4", "117": "91559311d8f78c23eb1ce5869bbd59a7f3f0f545", "118": "c679e46bb753531496f289642e85a6b64fc39d51", "119": "e6bd0658f3c7eb07e89f567b2e004567be5985d8", "120": "6fdd7401a7b8d3c6aee984c2487fdc7cb7dfe59a", "121": "d915e00f2ad604a6c6fa208fb2f585cfb6f772e7", "122": "9dd4610b3cb9e102eaec32dc35ad4a6156405eb0", "123": "5b29d9a65118e7237881f267f79a9f666323bf5c", "124": "0a28e30c8fd4dfdb78736a7545d0df99f70f02d5", "125": "cb39fd039c252f2c29cb6d185d95b21fbe4d544c", "126": "fadc962668537117e5b9d41328a8f2f32e30fdd2", "127": "fa0c1abf99c5666166f1eb1c5a70ebe815af86d5", "128": "7aecf163ae3b24e0829a1a7464c870d745495fb7", "131": "b52e18d01e8c2fc86216ebf424f2e37cf8ac6dad", "132": "c726a262f6c65c5e73b7d13b0f753520f7ea3a60", "133": "174a1969b462f2644b146e5cf19aa54e4ea3ec3e", "134": "7d7899535fb5088e78fb811d8fa5bcb60e97f20a", "135": "df364f1b1b67bc1f8d2777baca761aa89e33d33e", "136": "771d281d3c2c39e9d19c884871bd06c0c3227443", "137": "811c0b4378a7bfe95077195043bef0013580c53f", "138": "b49a4abe9e2c6b93146791ce41b05d960ba4bf0a", "140": "b62fac444a1d46d304e0bff44cf027e376e185b1", "141": "7bf2fe8cb525f9d917ff081b1fe4ccc536355070", "143": "dcc40f4a3813f4be5f837894a1520a1b02decf84"}, "revision_to_date": {"0": 1541038714000, "1": 1541046550000, "2": 1541381641000, "3": 1541382395000, "4": 1541567479000, "5": 1541567561000, "6": 1541866800000, "7": 1541866926000, "8": 1541866967000, "9": 1541867051000, "10": 1541882260000, "11": 1541886299000, "12": 1541886333000, "13": 1541954107000, "14": 1541956874000, "15": 1541957065000, "16": 1541959245000, "17": 1541966640000, "18": 1541991832000, "19": 1541991968000, "20": 1542035751000, "21": 1542037375000, "22": 1542037469000, "23": 1542040547000, "24": 1542116135000, "25": 1542124541000, "26": 1544478057000, "27": 1544478485000, "28": 1544478805000, "29": 1544479275000, "30": 1544929091000, "31": 1544929827000, "32": 1544929870000, "33": 1544932993000, "34": 1546099631000, "35": 1546111457000, "36": 1546111893000, "37": 1551985166000, "38": 1551987550000, "39": 1555958338000, "40": 1555958373000, "41": 1556117492000, "42": 1556117787000, "43": 1556451474000, "44": 1556664116000, "45": 1556769971000, "46": 1556770262000, "47": 1556770327000, "48": 1556912617000, "49": 1557372369000, "50": 1558105732000, "51": 1558211173000, "52": 1558213261000, "53": 1558213376000, "54": 1558707998000, "55": 1559501429000, "56": 1559582785000, "57": 1559582823000, "58": 1559697441000, "59": 1559700761000, "60": 1559769912000, "61": 1559782299000, "62": 1559790232000, "63": 1559791283000, "64": 1559793130000, "65": 1559795780000, "66": 1559796040000, "67": 1559999507000, "68": 1560032007000, "69": 1560033310000, "70": 1560035676000, "71": 1560134406000, "72": 1560135424000, "73": 1560170146000, "74": 1560171982000, "75": 1560174937000, "76": 1560309980000, "77": 1565144291000, "78": 1565144664000, "79": 1565305511000, "80": 1565498392000, "81": 1565532493000, "82": 1565532864000, "83": 1565533697000, "84": 1565534042000, "85": 1565812934000, "86": 1565909224000, "87": 1565909967000, "88": 1565911731000, "89": 1566462017000, "90": 1566846281000, "91": 1566898748000, "92": 1567264870000, "93": 1568079270000, "94": 1568079597000, "95": 1568079668000, "96": 1568079721000, "97": 1568080425000, "98": 1568080902000, "99": 1568081284000, "100": 1568088358000, "101": 1568109256000, "102": 1568166537000, "103": 1568167636000, "104": 1568167931000, "105": 1568168320000, "106": 1569788440000, "107": 1569797281000, "108": 1569797486000, "109": 1569983916000, "110": 1569988177000, "111": 1570153134000, "112": 1570153210000, "113": 1571054277000, "114": 1571054296000, "115": 1573323549000, "116": 1573341399000, "117": 1573341882000, "118": 1573343446000, "119": 1573439149000, "120": 1573498672000, "121": 1573498810000, "122": 1573506049000, "123": 1573506171000, "124": 1574436964000, "125": 1576681757000, "126": 1577731071000, "127": 1577742848000, "128": 1578155074000, "131": 1578403470000, "132": 1578500877000, "133": 1578622802000, "134": 1578622823000, "135": 1578630335000, "136": 1578670401000, "137": 1578667872000, "138": 1578672251000, "140": 1578840871000, "141": 1578847031000, "143": 1578916140000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz"], "machine": ["NM_MBP_15_2013", "NM_MBP_15_2018"], "num_cpu": ["12", "8"], "os": ["Darwin 19.2.0"], "ram": ["17179869184"], "python": ["3.5", "3.6", "3.7", "3.8"], "numpy": [""], "pandas": [""], "scipy": [""], "wrapt": [""], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "machine": "NM_MBP_15_2013", "num_cpu": "8", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.6", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "machine": "NM_MBP_15_2013", "num_cpu": "8", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.8", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "machine": "NM_MBP_15_2013", "num_cpu": "8", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.5", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "machine": "NM_MBP_15_2013", "num_cpu": "8", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.7", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz", "machine": "NM_MBP_15_2018", "num_cpu": "12", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.6", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz", "machine": "NM_MBP_15_2018", "num_cpu": "12", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.8", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz", "machine": "NM_MBP_15_2018", "num_cpu": "12", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.5", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz", "machine": "NM_MBP_15_2018", "num_cpu": "12", "os": "Darwin 19.2.0", "ram": "17179869184", "python": "3.7", "numpy": "", "pandas": "", "scipy": "", "wrapt": "", "branch": "master"}], "benchmarks": {"dataframe_schema.Decorators.mem_check_input": {"code": "class Decorators:\n    def mem_check_input(self):\n        @check_input(self.in_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "name": "dataframe_schema.Decorators.mem_check_input", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "3ea697ffff289f33f269332640cc7c528ffb275ef229da091c885b11e28ccd49"}, "dataframe_schema.Decorators.mem_check_output": {"code": "class Decorators:\n    def mem_check_output(self):\n        @check_output(self.out_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "name": "dataframe_schema.Decorators.mem_check_output", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "ed1435e8c6947a3d94dadfc85eee5581e5d195fd29a0e91f51e231c59aeb4fee"}, "dataframe_schema.Decorators.peakmem_check_input": {"code": "class Decorators:\n    def peakmem_check_input(self):\n        @check_input(self.in_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "name": "dataframe_schema.Decorators.peakmem_check_input", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "67ded5ba2108b9bca264b48b535548b68b5199261d5b146163a37ce6d914ca74"}, "dataframe_schema.Decorators.peakmem_check_output": {"code": "class Decorators:\n    def peakmem_check_output(self):\n        @check_output(self.out_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "name": "dataframe_schema.Decorators.peakmem_check_output", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "45dd4f4c48273b8c1d0f837e81679ee4d0e1995c327206276cc32743368842e9"}, "dataframe_schema.Decorators.time_check_input": {"code": "class Decorators:\n    def time_check_input(self):\n        @check_input(self.in_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "min_run_count": 2, "name": "dataframe_schema.Decorators.time_check_input", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4fd77a899e76c5aa41154a6ce315111de59d38e5e6412f7fca3ee4d153f8c32b", "warmup_time": -1}, "dataframe_schema.Decorators.time_check_output": {"code": "class Decorators:\n    def time_check_output(self):\n        @check_output(self.out_schema)\n        def transform_first_arg(self):\n            return Decorators.transformer(self.df)\n\n    def setup(self):\n        self.in_schema = DataFrameSchema({\"column1\": Column(String)})\n        self.out_schema = DataFrameSchema({\"column2\": Column(Int)})\n        self.df = pd.DataFrame({\"column1\": [\"a\", \"b\", \"c\"]})", "min_run_count": 2, "name": "dataframe_schema.Decorators.time_check_output", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f7514d87e969c54d82e4997e96d35fabe056e5ae18b83a6767b5cd62df9d4494", "warmup_time": -1}, "dataframe_schema.Validate.mem_df_schema": {"code": "class Validate:\n    def mem_df_schema(self):\n         self.schema.validate(self.df)\n\n    def setup(self):\n        self.schema = DataFrameSchema(\n                {\n                    \"a\": Column(Int),\n                    \"b\": Column(Float),\n                    \"c\": Column(String),\n                    \"d\": Column(Bool),\n                    \"e\": Column(Category),\n                    \"f\": Column(Object),\n                    \"g\": Column(DateTime),\n                    \"i\": Column(Timedelta),\n                    },\n                )\n        self.df = pd.DataFrame(\n                {\n                    \"a\": [1, 2, 3],\n                    \"b\": [1.1, 2.5, 9.9],\n                    \"c\": [\"z\", \"y\", \"x\"],\n                    \"d\": [True, True, False],\n                    \"e\": pd.Series([\"c2\", \"c1\", \"c3\"], dtype=\"category\"),\n                    \"f\": [(3,), (2,), (1,)],\n                    \"g\": [pd.Timestamp(\"2015-02-01\"),\n                          pd.Timestamp(\"2015-02-02\"),\n                          pd.Timestamp(\"2015-02-03\")],\n                    \"i\": [pd.Timedelta(1, unit=\"D\"),\n                          pd.Timedelta(5, unit=\"D\"),\n                          pd.Timedelta(9, unit=\"D\")]\n                    })", "name": "dataframe_schema.Validate.mem_df_schema", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "23089f5ca9c3daebe660e72445237be641594be9680900994f53cfe47fc85d4a"}, "dataframe_schema.Validate.peakmem_df_schema": {"code": "class Validate:\n    def peakmem_df_schema(self):\n         self.schema.validate(self.df)\n\n    def setup(self):\n        self.schema = DataFrameSchema(\n                {\n                    \"a\": Column(Int),\n                    \"b\": Column(Float),\n                    \"c\": Column(String),\n                    \"d\": Column(Bool),\n                    \"e\": Column(Category),\n                    \"f\": Column(Object),\n                    \"g\": Column(DateTime),\n                    \"i\": Column(Timedelta),\n                    },\n                )\n        self.df = pd.DataFrame(\n                {\n                    \"a\": [1, 2, 3],\n                    \"b\": [1.1, 2.5, 9.9],\n                    \"c\": [\"z\", \"y\", \"x\"],\n                    \"d\": [True, True, False],\n                    \"e\": pd.Series([\"c2\", \"c1\", \"c3\"], dtype=\"category\"),\n                    \"f\": [(3,), (2,), (1,)],\n                    \"g\": [pd.Timestamp(\"2015-02-01\"),\n                          pd.Timestamp(\"2015-02-02\"),\n                          pd.Timestamp(\"2015-02-03\")],\n                    \"i\": [pd.Timedelta(1, unit=\"D\"),\n                          pd.Timedelta(5, unit=\"D\"),\n                          pd.Timedelta(9, unit=\"D\")]\n                    })", "name": "dataframe_schema.Validate.peakmem_df_schema", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "5ea67a5ea14055b175ca1cf4c7f3b213f9057da562d6baebaccb8b667c31ecc4"}, "dataframe_schema.Validate.time_df_schema": {"code": "class Validate:\n    def time_df_schema(self):\n        self.schema.validate(self.df)\n\n    def setup(self):\n        self.schema = DataFrameSchema(\n                {\n                    \"a\": Column(Int),\n                    \"b\": Column(Float),\n                    \"c\": Column(String),\n                    \"d\": Column(Bool),\n                    \"e\": Column(Category),\n                    \"f\": Column(Object),\n                    \"g\": Column(DateTime),\n                    \"i\": Column(Timedelta),\n                    },\n                )\n        self.df = pd.DataFrame(\n                {\n                    \"a\": [1, 2, 3],\n                    \"b\": [1.1, 2.5, 9.9],\n                    \"c\": [\"z\", \"y\", \"x\"],\n                    \"d\": [True, True, False],\n                    \"e\": pd.Series([\"c2\", \"c1\", \"c3\"], dtype=\"category\"),\n                    \"f\": [(3,), (2,), (1,)],\n                    \"g\": [pd.Timestamp(\"2015-02-01\"),\n                          pd.Timestamp(\"2015-02-02\"),\n                          pd.Timestamp(\"2015-02-03\")],\n                    \"i\": [pd.Timedelta(1, unit=\"D\"),\n                          pd.Timedelta(5, unit=\"D\"),\n                          pd.Timedelta(9, unit=\"D\")]\n                    })", "min_run_count": 2, "name": "dataframe_schema.Validate.time_df_schema", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "2f71e2645cea81a3ce8fb632321fb122d7b758bb153c1098bcd3dc35acd12b87", "warmup_time": -1}, "series_schema.Validate.mem_series_schema": {"code": "class Validate:\n    def mem_series_schema(self):\n         self.schema.validate(self.series)\n\n    def setup(self):\n        self.schema = SeriesSchema(\n                String,\n                checks=[\n                    Check(lambda s: s.str.startswith(\"foo\")),\n                    Check(lambda s: s.str.endswith(\"bar\")),\n                    Check(lambda x: len(x) > 3, element_wise=True)\n                    ],\n                nullable=False,\n                allow_duplicates=True,\n                name=\"my_series\")\n        self.series = pd.Series([\"foobar\", \"foobar\", \"foobar\"],\n                                name=\"my_series\")", "name": "series_schema.Validate.mem_series_schema", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "d640c3be054a1d4dd88af6aac36c6b9c3e1ae4811dba553777e4854e0b940521"}, "series_schema.Validate.peakmem_series_schema": {"code": "class Validate:\n    def peakmem_series_schema(self):\n         self.schema.validate(self.series)\n\n    def setup(self):\n        self.schema = SeriesSchema(\n                String,\n                checks=[\n                    Check(lambda s: s.str.startswith(\"foo\")),\n                    Check(lambda s: s.str.endswith(\"bar\")),\n                    Check(lambda x: len(x) > 3, element_wise=True)\n                    ],\n                nullable=False,\n                allow_duplicates=True,\n                name=\"my_series\")\n        self.series = pd.Series([\"foobar\", \"foobar\", \"foobar\"],\n                                name=\"my_series\")", "name": "series_schema.Validate.peakmem_series_schema", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "69f2d835b0e4ff61ca789892cb0f3df2f517640816c1dbe6df7419c13760c341"}, "series_schema.Validate.time_series_schema": {"code": "class Validate:\n    def time_series_schema(self):\n        self.schema.validate(self.series)\n\n    def setup(self):\n        self.schema = SeriesSchema(\n                String,\n                checks=[\n                    Check(lambda s: s.str.startswith(\"foo\")),\n                    Check(lambda s: s.str.endswith(\"bar\")),\n                    Check(lambda x: len(x) > 3, element_wise=True)\n                    ],\n                nullable=False,\n                allow_duplicates=True,\n                name=\"my_series\")\n        self.series = pd.Series([\"foobar\", \"foobar\", \"foobar\"],\n                                name=\"my_series\")", "min_run_count": 2, "name": "series_schema.Validate.time_series_schema", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "600cc36ac19c30710095722d4090e9c2c3f00be7945ba8ef3655a7b2ebb9c4e3", "warmup_time": -1}}, "machines": {"NM_MBP_15_2013": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz", "machine": "NM_MBP_15_2013", "num_cpu": "8", "os": "Darwin 19.2.0", "ram": "17179869184", "version": 1}, "NM_MBP_15_2018": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz", "machine": "NM_MBP_15_2018", "num_cpu": "12", "os": "Darwin 19.2.0", "ram": "17179869184", "version": 1}}, "tags": {"0.0.1": 12, "0.0.2": 12, "0.0.3": 15, "0.0.4": 24, "0.0.5": 28, "0.1.0": 33, "0.1.1": 36, "0.1.2": 40, "0.2.0-rc1": 92, "v0.1.3": 72, "v0.1.4": 75, "v0.1.5": 84, "v0.2.0": 102, "v0.2.1": 105, "v0.2.2": 108, "v0.2.3": 112, "v0.2.4": 118, "v0.2.5": 119, "v0.2.6": 121, "v0.2.7": 123}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}